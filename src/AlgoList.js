import * as algos from './algo';

export const algoMap = {
	ArrayList: ['ArrayList', algos.ArrayList],
	LinkedList: ['Singly LinkedList', algos.LinkedList],
	DoublyLinkedList: ['Doubly LinkedList', algos.DoublyLinkedList],
	CircularlyLinkedList: ['Circularly LinkedList', algos.CircularlyLinkedList],
	StackArray: ['Stack (Array)', algos.StackArray],
	StackLL: ['Stack (LinkedList)', algos.StackLL],
	QueueArray: ['Queue (Array)', algos.QueueArray],
	QueueLL: ['Queue (LinkedList)', algos.QueueLL],
	DequeArray: ['Dequeue (Array)', algos.DequeArray],
	DequeueLL: ['Dequeue (LinkedList)', algos.DequeLL],
	BST: ['Binary Search Tree', algos.BST],
	AVL: ['AVL', algos.AVL],
	BTree: ['2-4 Tree', algos.BTree],
	BubbleSort: ['Bubble Sort', algos.BubbleSort],
	InsertionSort: ['Insertion Sort', algos.InsertionSort],
	SelectionSort: ['Selection Sort', algos.SelectionSort],
	QuickSort: ['QuickSort', algos.QuickSort],
	MergeSort: ['MergeSort', algos.MergeSort],
	HeapSort: ['HeapSort', algos.HeapSort],
	Kruskals: ['Kruskals', algos.Kruskals],
	Prims: ['Prims', algos.Prims],
	Dijkstras: ['Dijkstras', algos.Dijkstras],
	BFS: ['BFS', algos.BFS],
	DFS: ['DFS', algos.DFS],
	Graph: ['Graph', algos.Graph],
};

export const algoList = [
	'Lists',
	'ArrayList',
	'LinkedList',
	'DoublyLinkedList',
	'CircularlyLinkedList',
	'Stacks and Queues',
	'StackArray',
	'StackLL',
	'QueueArray',
	'QueueLL',
	'DequeArray',
	'DequeueLL',
	'Sorting Algorithm',
	'BubbleSort',
	'InsertionSort',
	'SelectionSort',
	'QuickSort',
	'HeapSort',
	'MergeSort',
	'Trees',
	'BST',
	'AVL',
	'BTree',
	'Graphs',
	'Graph',
	'DFS',
	'BFS',
	'Minimum Spanning Trees',
	'Kruskals',
	'Prims',
	'Dijkstras',
];
